<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<search>
    
     <entry>
        <title>MacOS系统Docker默认存储路径迁移方法</title>
        <url>https://blog.thewinds.cn/post/macos%E7%B3%BB%E7%BB%9Fdocker%E9%BB%98%E8%AE%A4%E5%AD%98%E5%82%A8%E8%B7%AF%E5%BE%84%E8%BF%81%E7%A7%BB%E6%96%B9%E6%B3%95/</url>
        <categories>
          <category>技术</category>
        </categories>
        <tags>
          <tag>docker</tag><tag>macos</tag>
        </tags>
        <content type="html">  MacOS系统Docker默认存储路径迁移方法  对于仅有120G的固态硬盘来说，Docker占用的存储空间感到压力山大。搜了一圈才找到迁移修改默认存储位置的方法，特此记录一下。
 先说修改方法 Docker MacOS版本默认的存储路径是
~/Library/Containers/com.docker.docker/  思路就是先把这个文件夹移动到其他（你的其他硬盘或分区）位置，然后再将新位置创建一个软链接到这里来。
第一步将docker文件夹复制到新位置，因为socket文件是不允许直接复制的，所以可以用rsync来进行同步实现复制
rsync -a ~/Library/Containers/com.docker.docker/ /Volumes/xxxx  第二步将原来的docker文件夹重命名为 com.docker.docker.old
mv com.docker.docker com.docker.docker.old  第三步将新路径软链接过来
# cd ~/Library/Containers ln -s /Volumes/xxxx com.docker.docker  第四部启动docker，如果正常启动删除掉原来的docker文件夹即可
rm com.docker.docker.old  顺便吐槽下，两年前买的¥379 买的120G SSD，现在可以买480G了 🙂
EOF </content>
    </entry>
    
     <entry>
        <title>博客搭建记录</title>
        <url>https://blog.thewinds.cn/post/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
        <categories>
          <category>技术</category>
        </categories>
        <tags>
          <tag>博客</tag><tag>git</tag><tag>hugo</tag><tag>caddy</tag>
        </tags>
        <content type="html">   一直以来都想搭建一个自己的博客,记录一些问题或者心得. 利用十一假期的时间部署了一个博客
 0x00 写之前 本来想着自己写一个博客,能够支持配置主题样式,自动抓取git上托管的文章&amp;hellip;,后来发现别人已经做得很好了（自己太懒）比如 hexo,hugo 所以决定选择一个静态博客生成器然后修改一下主题来满足一下自己的需求.
0x01 搜刮一波 于是就去github上搜了一下静态博客生成器,比较好的有两个:Hexo 和 Hugo Hugo是用golang写的,身为一个golang粉当然果断选择了他 哈哈哈。OK生成器选好了之后下一步就是取选一个合适的主题了。
0x02 纠结. 去官网看了一下,主题是不少但是感觉好看的确实不多。搜索半天找不到一个合适的足以让你产生算了还是自己搞一个吧这种冲动。= =| 最后发现了一个叫Next的主题，clone到theme目录感觉还不错,然后就开始各种配置。
首先创建博客站点:
mkdir blog hugo new site . hugo new post/hello.md  然后 cd themes 进入到主题目录 git clone path/to/theme/repo 然后把主题中的config.toml 复制到博客 根目录  配置一下域名网站介绍个人信息&amp;hellip;.
0x03 使用theme遇到的坑 配置好主题后,运行 hugo 进行编译,发现报错,看了下错误信息大概是遇到了len typed nil error,也就是对一个nil 的 数组取长度,经过排查发现是因为没设置分类或者标签导致.Site.Taxonomies.categories == nil, hugo主题使用的模板引擎是go自带的模板引擎所以直接在模板里判断一下数组是否为nil,果然成功。问题解决 fork一份原主题改好之后给作者发个PR做个贡献~ 修改过的 hugo-theme-next
0x04 编译运行. 在博客根目录运行 hugo 命令后会自动扫描博文目录和主题中的模板和样式,然后把所有的文章和页面生成静态网页输出到 public 文件夹,我们只需把 public 文件夹中的内容放到服务器上即可。当然如果想在本地编辑文章后及时预览,只需要使用hugo server 就可以自动监控 data,content,layouts,static 目录的改动自动进行编译，打开 http://localhost:1313/ 即可看到生成的博客。
0x05 部署到服务器上 对于博客最初的设想就是能够在编辑过文章之后一个命令推送到服务器上。最简单的做法就是用一个Github Page。但是又想把网站放在自己服务器上,于是就把Github作为一个中转的地方。 这样的话有两种方式来实现一种是 使用 Github WebHook PC 上 commit 到Github之后，Github通知服务器进行拉取。另外一种就是服务器定期(比如一分钟)从Github pull 一次。 本着节省资源的想法,就入了使用WebHook的坑,服务器使用的是Caddy,加入git插件和hugo插件之后实现了自动拉取然后编译,但是效果并不是很好,容易出问题(具体细节就不说了..)。于是决定用第二种方式,每分钟拉取一次,简单粗暴 :) 。Caddy 配置如下:
blog.thewinds.cn:443 { gzip #开启gzip压缩 log /var/log/caddy/blog_thewinds_cn.log #保存日志 root /var/www/blog.thewinds.cn/public #网站根目录 tls wind_ns@163.com #自动申请tls git github.com/thewinds/blog { #git 远程仓库地址 path /var/www/blog.thewinds.cn #同步到本地路径的地址 interval 60 #同步周期 } }  再次感受到了Caddy的清爽配置,特别是一个 tls&#43;邮箱就开启了https 爽~
0x06 还是有点懒 现在博客基本搭建完成了,以后发布文章的主要流程就是:
修改新增/博文 -&amp;gt; hugo 重新生成静态页面 -&amp;gt; git add -&amp;gt; git commit -&amp;gt; git push  然后服务器就会自动pull下来,新的内容就出现了。 说好的一个命令,所以还是写个shell吧。。
echo &amp;quot;更新说明:$1&amp;quot; hugo &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git commit -m &amp;quot;$1&amp;quot; &amp;amp;&amp;amp; git push  保存为 push_plog.sh
Ok 以后写好文章直接 执行 ./push_plog.sh  更新说明就好了。
</content>
    </entry>
    
     <entry>
        <title>Shadowshocks爬梯指南</title>
        <url>https://blog.thewinds.cn/post/shadowshocks%E7%88%AC%E6%A2%AF%E6%8C%87%E5%8D%97/</url>
        <categories>
          <category>技术</category>
        </categories>
        <tags>
          <tag>科学上网</tag>
        </tags>
        <content type="html">   作为一个程序猿总是想去外面的世界自由探索,无奈天朝墙太高,让查资料，github等工作都变得很坑…
本文将介绍如何使用ShadowSocks进行翻墙.
按照以下步骤进行即可
 1.安装 ss-qt5 ss-qt5是一个图形化的shadowshocks客户端,
安装之后选择 服务器=&amp;gt;打开服务器设定,
输入服务器信息即可.
Linux
sudo apt-get install ss-qt5  Mac
brew install ss-qt5  2.安装chrome拓展 安装chrome拓展的目的是自由切换国内国外路线,只有国外走代理 - 打开chrome应用商店
 下载 SwitchyOmega这个应用
 选择新建情景模式
 名称随意填写,类型选择代理服务器
 然后代理协议选择SOCKS5,代理服务器和端口填上ss客户端的代理服务器和端口,我这里是127.0.0.1 和 1080
 将不代理的地址列表中的内容清空
 按照如下规则新建
  规则列表地址为 https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt 到此为止,浏览器就可以愉快的翻墙了.
3.在终端里使用代理[可选] 安装prioxy
sudo apt-get install privoxy  修改prioxy的配置文件
gedit /etc/privoxy/config  注释掉原来的 listen-address 127.0.0.1:8118
在最后添加
forward-socks5 / 127.0.0.1:1080 . listen-address 127.0.0.1:8118  然后重启
sudo service privoxy restart  最后 在终端中使用代理
export http_proxy=&amp;quot;127.0.0.1:8118&amp;quot; export https_proxy=&amp;quot;127.0.0.1:8118&amp;quot;  enjoy it :) </content>
    </entry>
    
     <entry>
        <title>Posts</title>
        <url>https://blog.thewinds.cn/post/</url>
        <categories>
          
        </categories>
        <tags>
          
        </tags>
        <content type="html"> </content>
    </entry>
    
</search>